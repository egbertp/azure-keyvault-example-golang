version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/egbertp/azure-keyvault-example-golang
    steps:
      - checkout
      - run:
          name: Install build dependencies
          coommand: |
            go get -u github.com/golang/dep/cmd/dep
            go get -u github.com/mitchellh/gox
            go get -u github.com/tcnksm/ghr
            go get -u github.com/stevenmatthewt/semantics      
      - run:
          name: install dependencies
          command: |
            dep ensure
      - run:
          name: Fmt
          command: | 
            go fmt ./...
      - run:
          name: Vet
          command: | 
            go vet ./...            
      - add_ssh_keys
      - run:
          name: cross compile, only on version bump
          command: |
            TAG=`semantics --output-tag`
            GIT_DESCRIBE=`git describe --tags`
            COMMIT_HASH=`git rev-parse --short=8 HEAD 2>/dev/null`
            echo "Tag variable holds value $TAG"
            echo "Tag variable holds value $GIT_DESCRIBE"
            echo "COMMIT_HASH variable holds value $COMMIT_HASH"
            if [ "$TAG" ]; then
              echo "Compiling binaries"
              gox -ldflags "-X main.Version=$TAG -X main.CommitHash=$COMMIT_HASH" -os="linux darwin windows openbsd" -arch="amd64" -output="dist/keyvault-get-secret_{{.OS}}_{{.Arch}}"
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $TAG dist/
            else
              echo "The commit message(s) did not indicate a major/minor/patch version."
            fi
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master